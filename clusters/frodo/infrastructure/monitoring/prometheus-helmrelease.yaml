apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prometheus
  namespace: monitoring
spec:
  interval: 5m
  chart:
    chart: kube-prometheus-stack
    version: '69.2.1'
    sourceRef:
      kind: OCIRepository
      name: kube-prometheus-stack
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  driftDetection:
    mode: enabled
    ignore:
      # Ignore "validated" annotation which is not inserted during install
      - paths: [ "/metadata/annotations/prometheus-operator-validated" ]
        target:
          kind: PrometheusRule
  valuesFrom:
  - kind: ConfigMap
    name: flux-kube-state-metrics-config
    valuesKey: kube-state-metrics-config.yaml
  values:
    fullnameOverride: prometheus
    defaultRules:
      create: true
      rules:
        alertmanager: true
        etcd: true
        configReloaders: true
        general: true
        k8s: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverHistogram: true
        kubeApiserverSlos: true
        kubelet: true
        kubeProxy: true
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: true
        kubernetesStorage: true
        kubernetesSystem: true
        kubeScheduler: true
        kubeStateMetrics: true
        network: true
        node: true
        nodeExporterAlerting: true
        nodeExporterRecording: true
        prometheus: true
        prometheusOperator: true
    alertmanager:
      fullnameOverride: alertmanager
      enabled: true
      config:
        route:
          receiver: "null"
          group_by:
            - namespace
          continue: false
          routes:
            - receiver: "null"
              matchers:
                - alertname="Watchdog"
              continue: false
            - receiver: "discord-webhook"
              repeat_interval: 4h
              group_by: [ alertname ]
              group_wait: 1s
              group_interval: 1s
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 12h
        inhibit_rules:
          - source_matchers:
              - severity="critical"
            target_matchers:
              - severity=~"warning|info"
            equal:
              - namespace
              - alertname
          - source_matchers:
              - severity="warning"
            target_matchers:
              - severity="info"
            equal:
              - namespace
              - alertname
          - source_matchers:
              - alertname="InfoInhibitor"
            target_matchers:
              - severity="info"
            equal:
              - namespace
          - target_matchers:
              - alertname="InfoInhibitor"
        receivers:
          - name: "null"
          - name: "discord-webhook"
            webhook_configs:
              - url: "http://discord-alerts:9094"
      ingress:
        enabled: false
    grafana:
      enabled: true
      fullnameOverride: grafana
      forceDeployDatasources: false
      forceDeployDashboards: false
      defaultDashboardsEnabled: true
      defaultDashboardsTimezone: utc
      serviceMonitor:
        enabled: true
      admin:
        existingSecret: grafana-admin-credentials
        userKey: admin-user
        passwordKey: admin-password
    kubeApiServer:
      enabled: true
    kubelet:
      enabled: true
      serviceMonitor:
        metricRelabelings:
          - action: replace
            sourceLabels:
              - node
            targetLabel: instance
    kubeControllerManager:
      enabled: true
      endpoints: # ips of servers 
        - 192.168.1.79
        - 192.168.1.167
        - 192.168.1.224
    coreDns:
      enabled: true
    kubeDns:
      enabled: false
    kubeEtcd:
      enabled: true
      endpoints: # ips of servers
        - 192.168.1.79
        - 192.168.1.167
        - 192.168.1.224
      service:
        enabled: true
        port: 2381
        targetPort: 2381
    kubeScheduler:
      enabled: true
      endpoints: # ips of servers
        - 192.168.1.79
        - 192.168.1.167
        - 192.168.1.224
    kubeProxy:
      enabled: true
      endpoints: # ips of servers
        - 192.168.1.79
        - 192.168.1.167
        - 192.168.1.224
    kubeStateMetrics:
      enabled: true
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
      selfMonitor:
        enabled: true
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
    nodeExporter:
      enabled: true
      serviceMonitor:
        relabelings:
          - action: replace
            regex: (.*)
            replacement: $1
            sourceLabels:
              - __meta_kubernetes_pod_node_name
            targetLabel: kubernetes_node
    prometheus-node-exporter:
      fullnameOverride: node-exporter
      podLabels:
        jobLabel: node-exporter
      extraArgs:
        - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
        - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$
      service:
        portName: http-metrics
      prometheus:
        monitor:
          enabled: true
          relabelings:
            - action: replace
              regex: (.*)
              replacement: $1
              sourceLabels:
                - __meta_kubernetes_pod_node_name
              targetLabel: kubernetes_node
      resources:
        requests:
          memory: 512Mi
          cpu: 250m
        limits:
          memory: 2048Mi
    prometheusOperator:
      enabled: true
      prometheusConfigReloader:
        resources:
          requests:
            cpu: 200m
            memory: 50Mi
          limits:
            memory: 100Mi
    prometheus:
      enabled: true
      prometheusSpec:
        replicas: 1
        replicaExternalLabelName: "replica"
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 6h
        enableAdminAPI: true
        walCompression: true
        scrapeInterval: 30s
        evaluationInterval: 30s
    thanosRuler:
      enabled: false
    
